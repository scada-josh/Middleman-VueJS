'use strict'

import Vue from  'vue';
import VueRouter from 'vue-router';
// import App from  './javascript-vue-routing/partials/vue/components/App.vue'
// import { routes } from './javascript-vue-routing-wp-routes.js'

// Vue.use(VueRouter);

// const router = new VueRouter({
// 	routes
// });

// const ItWorks = {
//   template: '<div>It works!</div>',
//   mounted: function() {
//   		console.log('mounted');
//   }
// }


// const router = new VueRouter()

// router.map({
//   '/': {
//     component: ItWorks
//   },
//   '/login': {
//     component: ItWorks
//   }
// })

// router.start(App, '#app')





// // For 404 page
// var notFound = Vue.extend({
//    // You can use also use template path (Thanks to @jcerdan)
//    // path : '/path/to/component.html'
//    template: '<h1>Not Found</h1>'
// })

// const router = new VueRouter({
//   // mode: 'history',
//   // base: __dirname,
//   	 // base: './',
//   base: 'http://localhost/Middleman-VueJS/build/src/desktop/vue-routing/',
//   routes: [
// 	    { path: './', redirect: '/parent' },
// 	    { path: './parent', component: ItWorks },
// 	    { path: '*', redirect: '/terms-of-service' }
//   ]
// })

// router.redirect({
//   '/test': '/terms-of-service'
// })


// console.log(__dirname);
// console.log(router);


// new Vue({
//   el: '#app',
//   router,
//   render: h => h(App)
// })

// new Vue({
//   el: '#app',
//   router: router,
//   template: '<router-view></router-view>'
// })





// new Vue({
//   el: '#app',
//   router: router,
//   render: h => h('router-view')
// })

// 0. If using a module system, call Vue.use(VueRouter)

// 1. Define route components.
// These can be imported from other files
const Foo = { template: '<div>foo</div>' }
const Bar = { template: '<div>bar</div>' }

// 2. Define some routes
// Each route should map to a component. The "component" can
// either be an actual component constructor created via
// Vue.extend(), or just a component options object.
// We'll talk about nested routes later.
const routes = [
  { path: '/foo', component: Foo },
  { path: '/bar', component: Bar }
]

// 3. Create the router instance and pass the `routes` option
// You can pass in additional options here, but let's
// keep it simple for now.
const router = new VueRouter({
  routes
})

// 4. Create and mount the root instance.
// Make sure to inject the router with the router option to make the
// whole app router-aware.
const app = new Vue({
  router
}).$mount('#app')

// Now the app has started!
